(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{383:function(e,v,_){"use strict";_.r(v);var o=_(25),t=Object(o.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("p"),_("div",{staticClass:"table-of-contents"},[_("ul",[_("li",[_("a",{attrs:{href:"#一、谈谈vue初始化从数据到视图的过程，能详细些吗？"}},[e._v("一、谈谈vue初始化从数据到视图的过程，能详细些吗？")])])])]),_("p"),e._v(" "),_("h2",{attrs:{id:"一、谈谈vue初始化从数据到视图的过程，能详细些吗？"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#一、谈谈vue初始化从数据到视图的过程，能详细些吗？"}},[e._v("#")]),e._v(" 一、谈谈vue初始化从数据到视图的过程，能详细些吗？")]),e._v(" "),_("ul",[_("li",[e._v("首先在 "),_("code",[e._v("vue")]),e._v(" 的内部会执行 "),_("code",[e._v("_init()")]),e._v(" 方法，进行一系列的初始化，首先会进行配置的合并，将用户传入的对象和自身的方法属性进行合并。")]),e._v(" "),_("li",[e._v("然后会确定组件的父子关系，将父组件的自定义事件添加到子组件的事件中心中，挂载之后会用到的将 "),_("code",[e._v("render")]),e._v(" 函数内的数据转为 "),_("code",[e._v("VNode")]),e._v(" 的方法(手写 "),_("code",[e._v("render")]),e._v(" 函数里的h方法)，接着执行第一个生命周期钩子 "),_("code",[e._v("beforeCreate")]),e._v(" 函数。")]),e._v(" "),_("li",[e._v("接下来会初始化一些状态，比如 "),_("code",[e._v("inject、data、computed、watch、provide")]),e._v(" 等，挂载到当前实例 "),_("code",[e._v("this")]),e._v(" 下，并完成数据的响应式，紧接着执行 "),_("code",[e._v("created")]),e._v(" 钩子函数。")]),e._v(" "),_("li",[e._v("开始组件的挂载阶段，如果是不带编译器版本且需要编译时，这个时候就开始将模板编译 "),_("code",[e._v("render")]),e._v(" 函数，完毕之后执行 "),_("code",[e._v("beforeMount")]),e._v(" 钩子。")]),e._v(" "),_("li",[e._v("接下来执行 "),_("code",[e._v("render")]),e._v(" 函数，得到 "),_("code",[e._v("VNode")]),e._v(" ，之后执行 "),_("code",[e._v("patch")]),e._v(" 由内而外的将 "),_("code",[e._v("VNode")]),e._v(" 转为真实 "),_("code",[e._v("Dom")]),e._v(" ，完成之后执行 "),_("code",[e._v("mounted")]),e._v(" 钩子。")]),e._v(" "),_("li",[e._v("如果在 "),_("code",[e._v("patch")]),e._v(" 的过程中遇到了子组件的 "),_("code",[e._v("VNode")]),e._v(" ，就会转为去执行子组件的初始化到真实 "),_("code",[e._v("Dom")]),e._v(" 的状态过程，完毕之后才执行父组件的 "),_("code",[e._v("mounted")]),e._v(" 钩子。")])])])}),[],!1,null,null,null);v.default=t.exports}}]);